# GitHub Actions workflow for Baler (BAd Link reportER) version 0.0.2.
# This is available as the file "sample-workflow.yml" from the source
# code repository for Baler: https://github.com/caltechlibrary/baler/

name: "Bad Link Reporter"

# Configure this section ─────────────────────────────────────────────

env:
  # Files examined by the workflow:
  files: '*.md'

  # Label assigned to issues created by this workflow:
  labels: 'bug'

  # Optional file containing a list of URLs to ignore, one per line:
  ignore: '.github/workflows/ignored-urls.txt'

  # Number of previous issues to check for duplicate reports.
  lookback: 5

  # Time (sec) to wait on an unresponsive URL before trying once more.
  timeout: 15

  debug: 'true'

on:
  schedule:
    # Syntax is: "minute  hour  day-of-month  month  day-of-week"
    - cron: "00 04 * * *"
  push:
    paths:
      - '**.md'
      - .github/workflows/bad-link-reporter.yml
      - .github/workflows/test-baler.yml
      - .github/workflows/ignored-urls.txt
  workflow_dispatch:
    # inputs:
    #   files:
    #     description: "Comma-separated paths or regexp's"
    #     default: '*.md'
    #   labels:
    #     description: "Comma-separated issue labels"
    #     default: 'bug'
    #   ignore:
    #     description: "File containing URLs to ignore"
    #     default: '.github/workflows/ignored-urls.txt'
    #   timeout:
    #     default: 10
    #   lookback:
    #     default: 10
    #   debug:
    #     description: "Debug"
    #     type: boolean
    #     default: true

# The rest of this file should be left as-is ─────────────────────────

run-name: Test links in files
jobs:
  run-baler:
    name: Test links in Markdown files
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: caltechlibrary/baler@develop
        with:
          files:    ${{github.event.inputs.files    || env.files}}
          labels:   ${{github.event.inputs.labels   || env.labels}}
          ignore:   ${{github.event.inputs.ignore   || env.ignore}}
          timeout:  ${{github.event.inputs.timeout  || env.timeout}}
          lookback: ${{github.event.inputs.lookback || env.lookback}}
          debug:    ${{github.event.inputs.debug    || env.debug}}
